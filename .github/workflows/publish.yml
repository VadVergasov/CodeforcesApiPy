name: Test, publish to PyPI and create Release.

on:
  push:
    branches:
      - master
      - develop
    tags:
      - "*"
  pull_request_target:
    branches:
      - master
      - develop

jobs:
  test:
    environment:
      name: Testing
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install -r requirements.txt
          pip install .
      - name: Test with pytest
        run: |
          pytest tests/ --api_key ${{ secrets.CODEFORCES_API_KEY }} --api_secret ${{ secrets.CODEFORCES_API_SECRET }} -v
  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    name: Build and publish Python üêç distributions üì¶ to PyPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        run: |
          python -m pip install pip wheel twine --upgrade
          pip install -r requirements.txt
      - name: Build a binary wheel and a source tarball
        run: |
          python setup.py sdist
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.2
        with:
          password: ${{ secrets.pypi_password }}
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: publish
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
